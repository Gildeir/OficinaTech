// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OficinaTech.Infrastructure.Data.Context;

#nullable disable

namespace OficinaTech.Infrastructure.Migrations
{
    [DbContext(typeof(OficinaTechDbContext))]
    [Migration("20250315174021_ServicerOrderTable")]
    partial class ServicerOrderTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OficinaTech.Domain.Entities.MovimentacaoEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PecaId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PecaId");

                    b.ToTable("movimentacoes_estoque", (string)null);
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PlacaVeiculo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("orcamentos", (string)null);
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.OrcamentoPeca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<bool>("LiberadaParaCompra")
                        .HasColumnType("boolean");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("PecaId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("PecaId");

                    b.ToTable("orcamento_pecas", (string)null);
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("Estoque")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("pecas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Estoque = 10,
                            Nome = "Filtro de Óleo",
                            Preco = 25.90m
                        },
                        new
                        {
                            Id = -2,
                            Estoque = 15,
                            Nome = "Pastilha de Freio",
                            Preco = 120.50m
                        },
                        new
                        {
                            Id = -3,
                            Estoque = 8,
                            Nome = "Correia Dentada",
                            Preco = 75.30m
                        });
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.ServiceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusServiceOrder")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("OrcamentoId")
                        .IsUnique();

                    b.ToTable("service_orders", (string)null);
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.MovimentacaoEstoque", b =>
                {
                    b.HasOne("OficinaTech.Domain.Entities.Peca", "Peca")
                        .WithMany("MovimentacoesEstoque")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.OrcamentoPeca", b =>
                {
                    b.HasOne("OficinaTech.Domain.Entities.Orcamento", "Orcamento")
                        .WithMany("OrcamentoPecas")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OficinaTech.Domain.Entities.Peca", "Peca")
                        .WithMany("OrcamentoPecas")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orcamento");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.ServiceOrder", b =>
                {
                    b.HasOne("OficinaTech.Domain.Entities.Orcamento", "Orcamento")
                        .WithOne("ServiceOrder")
                        .HasForeignKey("OficinaTech.Domain.Entities.ServiceOrder", "OrcamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.Orcamento", b =>
                {
                    b.Navigation("OrcamentoPecas");

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("OficinaTech.Domain.Entities.Peca", b =>
                {
                    b.Navigation("MovimentacoesEstoque");

                    b.Navigation("OrcamentoPecas");
                });
#pragma warning restore 612, 618
        }
    }
}
